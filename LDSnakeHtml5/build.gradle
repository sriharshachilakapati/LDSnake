import de.richsource.gradle.plugins.gwt.GwtSuperDev;

evaluationDependsOn(':LDSnakeCore')

apply plugin: 'java'
apply plugin: 'gwt'
apply plugin: 'jetty'

gwt {
    minHeapSize = "512M";
    maxHeapSize = "1024M";

    gwtVersion = '2.8.0-beta1'
    modules 'com.shc.ldsnake.LDSnakeGwt'
    devModules 'com.shc.ldsnake.LDSnakeGwt'

    src += files(project(':LDSnakeCore').sourceSets.main.allJava.srcDirs)
}

javadoc {
    options.addStringOption("sourcepath", "")
}

task run(type: JettyRunWar) {
    dependsOn war
    webApp = war.archivePath
    daemon = true
}

task superDev(type: GwtSuperDev) {
    dependsOn run
    doFirst {
        gwt.modules = gwt.devModules
    }
}

war {
    from sourceSets.main.resources
    from zipTree(file("../libs/silenceengine-resources.jar"))
    from project(':LDSnakeCore').sourceSets.main.resources

    rootSpec.exclude("**/*.class")
    rootSpec.exclude("WEB-INF")
}

dependencies {
    providedCompile files("../libs/silenceengine.jar")
    providedCompile files("../libs/silenceengine-sources.jar")
    providedCompile files("../libs/backend-gwt.jar")
    providedCompile project(':LDSnakeCore')

    providedCompile 'com.goharsha:webgl4j:0.2.9-SNAPSHOT'
    providedCompile 'com.goharsha:gwt-al:0.2-SNAPSHOT'
    providedCompile 'com.goharsha:gwt-opentype:0.1-SNAPSHOT'
    providedCompile 'com.google.gwt:gwt-user:2.8.0-beta1'
    providedCompile 'com.google.gwt:gwt-servlet:2.8.0-beta1'

    providedCompile 'com.goharsha:easyxml:0.1:gwt'
    providedCompile 'com.goharsha:easyjson:0.3:gwt'
}